version: 2.1
# Use a package of configuration called an orb.
orbs:
  # Choose either one of the orbs below
  # welcome: circleci/welcome-orb@0.4.1
  # aws-cli: circleci/aws-cli@2.0.3
  aws-cli: circleci/aws-cli@2.0.3

commands:
  # Exercise: Reusable Job Code
  print_pipeline_id:
    parameters:
      id: 
        type: string
    steps:
      - run: echo << parameters.id >>

  # Exercise - Rollback
  destroy_environment:
    steps:
      - run:
          name: Destroy environment
          # ${CIRCLE_WORKFLOW_ID} is a Built-in environment variable 
          # ${CIRCLE_WORKFLOW_ID:0:5} takes the first 5 chars of the variable CIRCLE_CI_WORKFLOW_ID 
          when: on_fail
          command: |
            aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5}
 
# Define the jobs we want to run for this project
jobs:
  create_infrastructure:  # Choose any name, such as `build`
      # The primary container, where your job's commands will run
      docker:
        - image: amazon/aws-cli
      steps:
        - checkout # check out the code in the project directory
        - run: 
            name: Create Cloudformation Stack
            command: |
              aws cloudformation deploy \
                --template-file aws-server/cf-scripts/cicd_net.yaml \
                --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5} \
                --region us-east-1
        -  destroy_environment

  get_infrastructure_ip:  # Choose any name, such as `build`
      # The primary container, where your job's commands will run
      docker:
        - image: amazon/aws-cli
      steps:
        - checkout # check out the code in the project directory
        - run: 
            name: Fetch EC IP Address
            command: |
              chmod +x aws_ansible/*.sh \
              && ./aws_ansible/getawsHost.sh 
        -  destroy_environment


  # Exercise: Config and Deployment
  configure_infrastructure: 
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - add_ssh_keys:
          # You can get this ID in the section where you registered the SSH Key
          fingerprints: ["8e:9a:75:22:91:72:25:d7:50:26:ca:96:57:3b:d8:f7"] 
      - run:
          name: Install Ansible
          command: |
            apk add --update ansible
      - run:
          name: Run Playbook and Configure server
          command: |
            ansible-playbook -i aws_ansible/inventory aws_ansible/main-remote.yml


# Sequential workflow
workflows:
  # Name the workflow
  myWorkflow:
    jobs:
      - create_infrastructure
      - get_infrastructure_ip:
          requires:
            - create_infrastructure
      - configure_infrastructure:
          requires:
            - create_infrastructure
            - get_infrastructure_ip
